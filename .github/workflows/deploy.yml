name: Deploy to EKS

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Verify AWS Identity
        run: |
          echo "Current AWS Identity:"
          aws sts get-caller-identity
          echo "Checking EKS cluster access:"
          aws eks describe-cluster --name cmm707-cluster --region us-east-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-2 --name cmm707-cluster
          echo "Kubeconfig updated"

      - name: Test kubectl access
        run: |
          kubectl config current-context
          kubectl auth can-i get pods --all-namespaces
          kubectl get nodes

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 734842486567.dkr.ecr.us-east-2.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker build -t 734842486567.dkr.ecr.us-east-2.amazonaws.com/cmm707/frontend:latest .
          docker push 734842486567.dkr.ecr.us-east-2.amazonaws.com/cmm707/frontend:latest

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/frontend-service.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl rollout status deployment/frontend-deployment -n default --timeout=300s